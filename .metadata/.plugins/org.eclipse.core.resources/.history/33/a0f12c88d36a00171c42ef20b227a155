package demo;

import net.sf.ehcache.Cache;
import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;

public class CacheDemo {

	static CacheManager cacheManager = null;
	static Cache demoCache = null;
	
	static {
		System.out.println("---加载");
		cacheManager  = CacheManager.create();
		//或者
		//cacheManager = CacheManager.getInstance();
		demoCache = cacheManager.getCache("demoCache");
	}
	
	/**
	 * 通过名称从缓存中获取数据
	 * 
	 * @param cacheKey 缓存的键
	 * @return
	 * @throws Exception
	 */
	public static Object getCacheElement(String cacheKey) throws Exception{
		Element e = demoCache.get(cacheKey);
		if(e == null){
			return null;
		}
		return e.getObjectValue();
	}
	
	/**
	 * 将对象添加到缓存中
	 * 
	 * @param cacheKey 缓存的键
	 * @param result 缓存的值
	 * @throws Exception
	 */
	public static void addToCache(String cacheKey,Object result) throws Exception{
		Element element = new Element(cacheKey, result);
		demoCache.put(element);
	}
	
	/**
	 * 将对象从缓存中移除
	 * 
	 * @param cacheKey
	 * @throws Exception
	 */
	public static void delCache(String cacheKey) throws Exception{
		demoCache.remove(cacheKey);
	}
	
	public static void getAllCacheNames(){
		for(String cacheName : cacheManager.getCacheNames()){
			System.out.println(cacheName);
		}
	}
	
	public static void getAllCacheObjects(){
		for(Object key : demoCache.getKeys()){
			System.out.println(key);
		}
	}
}
